#!/bin/bash
# cobot 自動キャリブレーションスクリプト
# 使用方法: ./calibrate

echo "🎯 cobotキャリブレーション開始..."

# ROS2ノード確認
if ! ros2 node list 2>/dev/null | grep -q "cobot_node"; then
    echo "❌ cobotノードが起動していません"
    echo "   先に 'ros2 launch cobot cobot.launch.py' を実行してください"
    exit 1
fi

# マニュアルモードに切り替え
echo "🔧 マニュアルモードに切り替え中..."
ros2 service call /cobot/manual std_srvs/srv/Empty > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "❌ マニュアルモード切り替え失敗"
    exit 1
fi

sleep 1

echo "✋ マニュアルモード準備完了"
echo "🔘 ボタンを押しながらロボットを理想的な原点位置に動かしてください"
echo "🤏 グリッパーを最大に開いてください"
echo "📍 ボタンを押している間だけロボットが柔らかくなります"
echo ""

# 15秒カウントダウン
for i in {15..1}; do
    printf "\r⏰ カウントダウン: %2d秒 (位置を調整してください...)" $i
    sleep 1
done

printf "\r⏰ カウントダウン完了！                                    \n"
echo "💾 現在位置を原点として記憶中..."
echo ""

# 現在の関節角度を取得して表示
echo "📊 設定された原点位置:"
echo "  🦾 6軸関節角度:"
ros2 topic echo /cobot/joint_states sensor_msgs/msg/JointState -1 2>/dev/null | grep -A 6 "position:" | tail -6 | while read -r line; do
    if [[ $line =~ ^-?[0-9]+\.[0-9]+ ]]; then
        joint_num=$((joint_num + 1))
        angle=$(echo "$line * 180 / 3.14159" | bc -l 2>/dev/null || echo "$line")
        printf "    Joint %d: %.2f°\n" $joint_num "$angle" 2>/dev/null || echo "    $line"
    fi
done
echo "  🤏 グリッパー位置: 最大開き"
echo ""

# 現在位置を原点として保存
ros2 service call /cobot/calibrate_joints std_srvs/srv/Empty > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "✅ 6軸関節の原点設定完了"
else
    echo "❌ 関節原点設定失敗"
fi

# グリッパー原点設定
ros2 service call /cobot/calibrate_gripper std_srvs/srv/Empty > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "✅ グリッパー原点設定完了"
else
    echo "❌ グリッパー原点設定失敗"
fi

echo "🎯 キャリブレーション完了！原点が設定されました"
